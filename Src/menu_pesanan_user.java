/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tugas1_login;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;

/**
 *
 * @author ACER
 */
public class menu_pesanan_user extends javax.swing.JFrame {
    static int idObat;
    static int stock_barang;
    
    public void atur_kolom(){
        TableColumn column;
        dataobat.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF); 
        column = dataobat.getColumnModel().getColumn(0); 
        column.setPreferredWidth(30);
        column = dataobat.getColumnModel().getColumn(1); 
        column.setPreferredWidth(90);
        column = dataobat.getColumnModel().getColumn(2); 
        column.setPreferredWidth(110);
        column = dataobat.getColumnModel().getColumn(3); 
        column.setPreferredWidth(90);
        column = dataobat.getColumnModel().getColumn(4); 
        column.setPreferredWidth(80);
        column = dataobat.getColumnModel().getColumn(5); 
        column.setPreferredWidth(150); 
        column = dataobat.getColumnModel().getColumn(6); 
        column.setPreferredWidth(90);//ketersediaan
        column = dataobat.getColumnModel().getColumn(7); 
        column.setPreferredWidth(120);
        column = dataobat.getColumnModel().getColumn(8); 
        column.setPreferredWidth(70);
        column = dataobat.getColumnModel().getColumn(9); 
        column.setPreferredWidth(250);
    }
    public void tampil_data(){    
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("NO");            
    model.addColumn("Nama Obat");
    model.addColumn("Harga Obat");
    model.addColumn("Stok Obat");
    model.addColumn("Jenis Obat");
    model.addColumn("Ketersediaan");
    model.addColumn("Dosis Obat");
    model.addColumn("Expired Obat");
    model.addColumn("Deskripsi Obat");           
    model.addColumn("ID");        
    try{
        int no = 1;
        String sql  = "Select * from dataobat";
        Connection conn = koneksi.koneksiDB();
        java.sql.Statement st = conn.createStatement();
        java.sql.ResultSet rs = st.executeQuery(sql);
        while(rs.next()){
            NumberFormat formatRupiah = NumberFormat.getCurrencyInstance(new Locale("id", "ID"));
            int hargaObat = rs.getInt("harga_obat");
            String hargaRupiah = formatRupiah.format(hargaObat);            
            model.addRow(new Object[] {
                no++,
                rs.getString("nama_obat"),
                hargaRupiah,
                rs.getString("stock_obat"),
                rs.getString("jenis_obat"),
                rs.getString("ketersediaan"),
                rs.getString("dosis"),
                rs.getString("expired_obat"),
                rs.getString("deskripsi_obat"),
                rs.getString("id_obat")                
          });
          dataobat.setModel(model);            
//          TableColumn column = dataobat.getColumn("ID");
//            dataobat.removeColumn(column);
          atur_kolom();
        }        
        dataobat.setModel(model);            
        TableColumn column = dataobat.getColumn("ID");
        dataobat.removeColumn(column);
    } 
    catch (Exception e) {            
        JOptionPane.showMessageDialog(null, "Gagal mengambil data ke database", "Error", JOptionPane.ERROR_MESSAGE);
        }    
    }

    /**
     * Creates new form menu_pesanan_user
     */
    public menu_pesanan_user() {
        initComponents();
        tampil_data();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        dataobat = new javax.swing.JTable();
        btnBeli = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        txtCari = new javax.swing.JTextField();
        btndaftarpesanan = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        dataobat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        dataobat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataobatMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                dataobatMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(dataobat);

        btnBeli.setText("Beli Sekarang");
        btnBeli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBeliActionPerformed(evt);
            }
        });

        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        txtCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCariKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCariKeyTyped(evt);
            }
        });

        btndaftarpesanan.setText("Daftar Pesanan");
        btndaftarpesanan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndaftarpesananActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Century", 0, 14)); // NOI18N
        jLabel1.setText("Cari Data");

        jLabel2.setFont(new java.awt.Font("Century", 0, 24)); // NOI18N
        jLabel2.setText("Daftar Obat Batuk");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtCari))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(20, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBeli, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btndaftarpesanan)
                                .addGap(68, 68, 68)
                                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 743, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(22, 22, 22))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(280, 280, 280))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCari)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btndaftarpesanan, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBeli, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCariKeyPressed
        
    }//GEN-LAST:event_txtCariKeyPressed

    private void btnBeliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBeliActionPerformed
        beli_sekarang buynow = new beli_sekarang();
        buynow.setVisible(true); 
        this.dispose();
    }//GEN-LAST:event_btnBeliActionPerformed

    private void dataobatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataobatMouseClicked

    }//GEN-LAST:event_dataobatMouseClicked

    private void btndaftarpesananActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndaftarpesananActionPerformed
        pesanan_user buka_pesanan = new pesanan_user();
        buka_pesanan.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btndaftarpesananActionPerformed

    private void dataobatMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataobatMouseReleased
        int hargaObat = 0;
        int selectedRow = dataobat.getSelectedRow();        
//        int selectedRow = dataobat.getSelectedRow();
        TableModel model = dataobat.getModel();
        String id  = model.getValueAt(selectedRow, 9).toString();        
        int idObatt = Integer.parseInt(model.getValueAt(selectedRow, 9).toString());

//        String total_harga  = model.getValueAt(selectedRow, 2).toString();                        
        String stockbarangg  = model.getValueAt(selectedRow, 3).toString();       
        try {
            String sql = "SELECT harga_obat FROM dataobat WHERE id_obat = ?";
            Connection conn = koneksi.koneksiDB();
            PreparedStatement st = conn.prepareStatement(sql);
            st.setInt(1, idObatt);
            ResultSet rs = st.executeQuery();
            if (rs.next()) {
                hargaObat = rs.getInt("harga_obat");
                System.out.println(hargaObat);
                // Lakukan operasi atau tindakan lain sesuai kebutuhan dengan nilai hargaObat
                // Misalnya, masukkan nilai hargaObat ke objek atau variabel lain, atau lakukan perhitungan
            } else {
                // Data tidak ditemukan
                System.out.println("Data tidak ditemukan");
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
                                
        int jumlah_barang = hargaObat; 
        stock_barang = Integer.parseInt(stockbarangg);
        beli_sekarang.total_harga = jumlah_barang;                        
        idObat = Integer.parseInt(id); 
    }//GEN-LAST:event_dataobatMouseReleased

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        Login login = new Login();
        login.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void txtCariKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCariKeyTyped
        // TODO add your handling code here:
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("NO");            
        model.addColumn("Nama Obat");
        model.addColumn("Harga Obat");
        model.addColumn("Stok Obat");
        model.addColumn("Jenis Obat");
        model.addColumn("Ketersediaan");
        model.addColumn("Dosis Obat");
        model.addColumn("Expired Obat");
        model.addColumn("Deskripsi Obat");

        try {
            int no = 1;
            String sql = "Select nama_obat,harga_obat, stock_obat, jenis_obat, ketersediaan, dosis, expired_obat, deskripsi_obat From dataobat Where nama_obat like ? OR jenis_obat Like ?";
            Connection conn = koneksi.koneksiDB();
            PreparedStatement statement = conn.prepareStatement(sql);
            statement.setString(1, "%" + txtCari.getText() + "%");
            statement.setString(2, "%" + txtCari.getText() + "%");            
            ResultSet rs = statement.executeQuery();                
            while (rs.next()) {
                NumberFormat formatRupiah = NumberFormat.getCurrencyInstance(new Locale("id", "ID"));
                int hargaObat = rs.getInt("harga_obat");
                String hargaRupiah = formatRupiah.format(hargaObat);       
                model.addRow(new Object[] {no++, rs.getString(1), hargaRupiah,rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8)});
            }
            dataobat.setModel(model);
            atur_kolom();
        } 
        catch (Exception e){
//            System.out.println(e.getMessage());
//            System.out.println("Ambil Data Gagal");
        }
    }//GEN-LAST:event_txtCariKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menu_pesanan_user.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menu_pesanan_user.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menu_pesanan_user.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menu_pesanan_user.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new menu_pesanan_user().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBeli;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btndaftarpesanan;
    private javax.swing.JTable dataobat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtCari;
    // End of variables declaration//GEN-END:variables
}
